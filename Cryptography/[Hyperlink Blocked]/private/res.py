from Crypto.Util.number import long_to_bytes, inverse

r = 19986281561055397303702229601419145592903577671015806377301714414429048281589180687458604687269383322309744318185172163715369968236570525373659406966183718
s = 468717126597261580046009378792020276047379954754135432731388202912018677434665008176266778067132774283195556981049910318664844260526453392428042186997164
c = 34511326087249050798915801000944865103122064936851208648609525691503486022235109927174564939965791991404894841946827159675527663582259639547403660135478525790791972956292334615099555082818871267266209804158724795348130485674791055072158391638890221781062201145692228167547869119055893595164819657501525825983

e = 19
q = (r+s)//2
p = r-q
n = p*q
phi = (p-1)*(q-1)
d = inverse(e, phi)
dec = pow(c, d, n)

for k in range(99999):
    flag = long_to_bytes(k*(p*q) + dec)
    if (b"GRFLKS24{" in flag):
        print("FOUND K:", k)
        print(flag)
        break